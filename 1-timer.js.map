{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// import flatpickr from 'flatpickr';\n// import 'flatpickr/dist/flatpickr.min.css';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// let userSelectedDate;\n// let timerInterval;\n\n// const datetimePicker = document.getElementById('datetime-picker');\n// const startButton = document.querySelector('[data-start]');\n// const daysValue = document.querySelector('[data-days]');\n// const hoursValue = document.querySelector('[data-hours]');\n// const minutesValue = document.querySelector('[data-minutes]');\n// const secondsValue = document.querySelector('[data-seconds]');\n\n// startButton.disabled = true;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0];\n//     if (userSelectedDate <= new Date()) {\n//       iziToast.error({\n//         title: 'Помилка',\n//         message: 'Будь ласка, виберіть дату в майбутньому',\n//         position: 'topRight',\n//       });\n//       startButton.disabled = true;\n//     } else {\n//       startButton.disabled = false;\n//     }\n//   },\n// };\n\n// flatpickr(datetimePicker, options);\n\n// startButton.addEventListener('click', () => {\n//   if (!userSelectedDate) {\n//     iziToast.warning({\n//       title: 'Увага',\n//       message: 'Будь ласка, виберіть дату перед запуском таймера',\n//       position: 'topRight',\n//     });\n//     return;\n//   }\n\n//   if (timerInterval) {\n//     clearInterval(timerInterval);\n//   }\n\n//   startButton.disabled = true;\n//   datetimePicker.disabled = true;\n\n//   timerInterval = setInterval(() => {\n//     const now = new Date();\n//     const timeDiff = userSelectedDate.getTime() - now.getTime();\n\n//     if (timeDiff <= 0) {\n//       clearInterval(timerInterval);\n//       daysValue.textContent = '00';\n//       hoursValue.textContent = '00';\n//       minutesValue.textContent = '00';\n//       secondsValue.textContent = '00';\n//       iziToast.success({\n//         title: 'Успіх',\n//         message: 'Відлік завершено!',\n//         position: 'topRight',\n//       });\n//       datetimePicker.disabled = false;\n//       startButton.disabled = true;\n//       return;\n//     }\n\n//     const { days, hours, minutes, seconds } = convertMs(timeDiff);\n//     daysValue.textContent = addLeadingZero(days);\n//     hoursValue.textContent = addLeadingZero(hours);\n//     minutesValue.textContent = addLeadingZero(minutes);\n//     secondsValue.textContent = addLeadingZero(seconds);\n//   }, 1000);\n// });\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst stopButton = document.createElement('button'); // Додали кнопку зупинки\nstopButton.textContent = 'Stop';\nstopButton.style.display = 'none'; // Початково приховуємо кнопку зупинки\nstartButton.parentNode.insertBefore(stopButton, startButton.nextSibling);\n\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet timerInterval;\n\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    validateSelectedDate();\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction validateSelectedDate() {\n  if (userSelectedDate <= new Date()) {\n    iziToast.error({\n      title: 'Помилка',\n      message: 'Будь ласка, виберіть дату в майбутньому',\n      position: 'topRight',\n    });\n    startButton.disabled = true;\n  } else {\n    startButton.disabled = false;\n  }\n}\n\nfunction startTimer() {\n  if (!userSelectedDate) {\n    iziToast.warning({\n      title: 'Увага',\n      message: 'Будь ласка, виберіть дату перед запуском таймера',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  if (timerInterval) {\n    clearInterval(timerInterval);\n  }\n\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n  stopButton.style.display = 'inline-block'; // Показуємо кнопку зупинки\n\n  timerInterval = setInterval(() => {\n    const timeDiff = userSelectedDate.getTime() - new Date().getTime();\n    if (timeDiff <= 0) {\n      stopTimer();\n      iziToast.success({\n        title: 'Успіх',\n        message: 'Відлік завершено!',\n        position: 'topRight',\n      });\n      return;\n    }\n    updateTimerDisplay(timeDiff);\n  }, 1000);\n}\n\nfunction stopTimer() {\n  clearInterval(timerInterval);\n  daysValue.textContent = '00';\n  hoursValue.textContent = '00';\n  minutesValue.textContent = '00';\n  secondsValue.textContent = '00';\n  datetimePicker.disabled = false;\n  startButton.disabled = true;\n  stopButton.style.display = 'none'; // Приховуємо кнопку зупинки\n}\n\nfunction updateTimerDisplay(timeDiff) {\n  const { days, hours, minutes, seconds } = convertMs(timeDiff);\n  daysValue.textContent = addLeadingZero(days);\n  hoursValue.textContent = addLeadingZero(hours);\n  minutesValue.textContent = addLeadingZero(minutes);\n  secondsValue.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) / hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nstartButton.addEventListener('click', startTimer);\nstopButton.addEventListener('click', stopTimer);"],"names":["datetimePicker","startButton","stopButton","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","timerInterval","options","selectedDates","validateSelectedDate","flatpickr","iziToast","startTimer","timeDiff","stopTimer","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IA4GA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAa,SAAS,cAAc,QAAQ,EAClDA,EAAW,YAAc,OACzBA,EAAW,MAAM,QAAU,OAC3BD,EAAY,WAAW,aAAaC,EAAYD,EAAY,WAAW,EAEvE,MAAME,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EACAC,EAEJP,EAAY,SAAW,GAEvB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAClCC,GACD,CACH,EAEAC,EAAUZ,EAAgBS,CAAO,EAEjC,SAASE,GAAuB,CAC1BJ,GAAoB,IAAI,MAC1BM,EAAS,MAAM,CACb,MAAO,UACP,QAAS,0CACT,SAAU,UAChB,CAAK,EACDZ,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE3B,CAEA,SAASa,GAAa,CACpB,GAAI,CAACP,EAAkB,CACrBM,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,mDACT,SAAU,UAChB,CAAK,EACD,MACD,CAEGL,GACF,cAAcA,CAAa,EAG7BP,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BE,EAAW,MAAM,QAAU,eAE3BM,EAAgB,YAAY,IAAM,CAChC,MAAMO,EAAWR,EAAiB,QAAO,EAAK,IAAI,KAAI,EAAG,UACzD,GAAIQ,GAAY,EAAG,CACjBC,IACAH,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,oBACT,SAAU,UAClB,CAAO,EACD,MACD,CACDI,EAAmBF,CAAQ,CAC5B,EAAE,GAAI,CACT,CAEA,SAASC,GAAY,CACnB,cAAcR,CAAa,EAC3BL,EAAU,YAAc,KACxBC,EAAW,YAAc,KACzBC,EAAa,YAAc,KAC3BC,EAAa,YAAc,KAC3BN,EAAe,SAAW,GAC1BC,EAAY,SAAW,GACvBC,EAAW,MAAM,QAAU,MAC7B,CAEA,SAASe,EAAmBF,EAAU,CACpC,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUP,CAAQ,EAC5DZ,EAAU,YAAcoB,EAAeL,CAAI,EAC3Cd,EAAW,YAAcmB,EAAeJ,CAAK,EAC7Cd,EAAa,YAAckB,EAAeH,CAAO,EACjDd,EAAa,YAAciB,EAAeF,CAAO,CACnD,CAEA,SAASC,EAAUE,EAAI,CAKrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAxB,EAAY,iBAAiB,QAASa,CAAU,EAChDZ,EAAW,iBAAiB,QAASc,CAAS"}